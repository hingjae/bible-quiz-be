name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    env:
      APPLICATION_NAME: bible-quiz-backend
      ENVIRONMENT_NAME: biblequiz-env
      VERSION_FILE: VERSION

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set version from VERSION file + Git SHA
        id: version
        run: echo "VERSION=$(cat $VERSION_FILE)-${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3
        with:
          cache-disabled: true

      - name: Build project
        run: ./gradlew clean build -x test

      - name: Rename jar to app.jar
        run: |
          echo "Looking for jar: build/libs/app-$(cat $VERSION_FILE)-${GITHUB_SHA::7}.jar"
          JAR_NAME=build/libs/app-$(cat $VERSION_FILE)-${GITHUB_SHA::7}.jar
          if [ ! -f "$JAR_NAME" ]; then
            echo "JAR file not found: $JAR_NAME"
            ls build/libs
            exit 1
          fi
          cp "$JAR_NAME" app.jar

      - name: Create deployment package
        run: zip -r app.zip app.jar .ebextensions

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload app.zip to S3
        run: |
          aws s3 cp app.zip s3://elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}/$APPLICATION_NAME/$VERSION.zip

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name $APPLICATION_NAME \
            --version-label $VERSION \
            --source-bundle S3Bucket="elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="$APPLICATION_NAME/$VERSION.zip"

          aws elasticbeanstalk update-environment \
            --environment-name $ENVIRONMENT_NAME \
            --version-label $VERSION
