name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    env:
      APPLICATION_NAME: bible-quiz-backend
      ENVIRONMENT_NAME: biblequiz-env

    steps:
      - name: Notify Slack - Deploy started
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üöÄ *Deploy started* for `bible-quiz-backend`"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3
        with:
          cache-disabled: true

      - name: Build project
        run: ./gradlew clean build -x test

      - name: Move app.jar to project root
        run: cp build/libs/app.jar app.jar

      - name: Create deployment package
        run: zip -r app.zip app.jar .ebextensions

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload app.zip to S3
        run: |
          aws s3 cp "app.zip" s3://elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}/${{ env.APPLICATION_NAME }}/app.zip

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name $ENVIRONMENT_NAME \
            --version-label latest

      - name: Notify Slack - Deploy succeeded
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"‚úÖ *Deploy succeeded* for `bible-quiz-backend`"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack - Deploy failed
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"‚ùå *Deploy failed* for `bible-quiz-backend`"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}